.MODEL SMALL
.STACK 100H
.DATA
	a1 DW ?
	b1 DW ?
	c1 DW ?
	T1 DW ?
	T2 DW ?
	T3 DW ?
	T4 DW ?
	i5 DW ?
	j5 DW ?
	k5 DW ?
	l5 DW ?
	T5 DW ?
	T6 DW ?
	T7 DW ?
	T8 DW ?
.CODE
;------printing procedure----
PRINT_ID PROC

	;SAVE IN STACK
	PUSH AX
	PUSH BX
	PUSH CX
	PUSH DX

	;CHECK IF NEGATIVE
	OR AX, AX
	JGE PRINT_NUMBER

	;PRINT MINUS SIGN
	PUSH AX
	MOV AH, 2
	MOV DL, '-'
	INT 21H
	POP AX

	NEG AX

	PRINT_NUMBER:
	XOR CX, CX
	MOV BX, 10D

	REPEAT_CALC:

		;AX:DX- QUOTIENT:REMAINDER
		XOR DX, DX
		DIV BX  ;DIVIDE BY 10
		PUSH DX ;PUSH THE REMAINDER IN STACK

		INC CX

		OR AX, AX
		JNZ REPEAT_CALC

	MOV AH, 2

	PRINT_LOOP:
		POP DX
		ADD DL, 30H
		INT 21H
		LOOP PRINT_LOOP

	;NEWLINE
	MOV AH, 2
	MOV DL, 0AH
	INT 21H
	MOV DL, 0DH
	INT 21H

	POP DX
	POP CX
	POP BX
	POP AX

	RET
PRINT_ID ENDP

func_a PROC

	PUSH AX
	PUSH BX
	PUSH CX
	PUSH DX

	MOV AX, 7
	MOV a2, AX
	POP DX
	POP CX
	POP BX
	POP AX
RET
func_a ENDP

foo PROC

	PUSH AX
	PUSH BX
	PUSH CX
	PUSH DX

	MOV AX, a3
	ADD AX, 3
	MOV T1, AX
 	POP DX
	POP CX
	POP BX
	POP AX
RET
foo ENDP

bar PROC

	PUSH AX
	PUSH BX
	PUSH CX
	PUSH DX

	MOV AX, 4
	MOV BX, a4
	MUL BX
	MOV T2, AX

	MOV AX, 2
	MOV BX, b4
	MUL BX
	MOV T3, AX

	MOV AX, T2
	ADD AX, T3
	MOV T4, AX
 	POP DX
	POP CX
	POP BX
	POP AX
RET
bar ENDP

d‹û®2V